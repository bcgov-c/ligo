version: "2"
services:
  redis:
    image: redis:latest

  postgres2:
    # restart: always
    image: postgres:9.6
    ports:
      - "5432:5432"
    ##if we do not want to lose data when the database container is gone
    # volumes:
    #    - db_linking:/var/lib/postgresql/data
    # env_file: env
    # exposing host post 5432 (LHS) to postgres container called "postgres2"'s
    # port 5432 (RHS)


  celeryworker:
    image: novavic/ligo_celeryworker:3.3.2
    #env_file: ./worker/.env
    #FILE_LOC should be  /user_data/media/datasets/
    environment:
      - IN_DOCKER=1
      - C_FORCE_ROOT=true
      - CELERY_BROKER_URL=redis://redis:6379/0
      - LIB_VERSION:3.3.2
      - FILE_LOC:/user_data/media/datasets/
    depends_on:
      - redis
    volumes:
      - ./files/:/user_data
    # - web
    # #comment out or one or the other depending on what we want to list
    # #debug level message or info level message
    #   #ldeally info > debug
    #   #if we want to capture a msg at level y and any level higher than that
    #   #then we have to set the level
    #   #to the lower one (y) after the -l flag
    #   #command: celery -A linkage.taskapp worker -l INFO
    #   command: celery -A linkage.taskapp worker -l DEBUG
    # command: celery -A linkage.taskapp worker -l DEBUG

  #not so technical user (pulling image instead of building) focused docker compose file
  web:
    #restart: always
    image: novavic/ligo_web:2.1.2
    ports:
      - "8002:8000"
    #env_file: ./web-app/config/settings/.env
    environment:
      - IN_DOCKER=1
      - C_FORCE_ROOT=true
      - CELERY_BROKER_URL=redis://redis:6379/0
      - LINK_DB_NAME=postgres
      - LINK_DB_USER=postgres
      - LINK_DB_HOST=postgres2
      - LINK_DB_PORT=5432
      - LINK_DB_SERVICE=postgres
      - LINK_DB_PASSWORD=
      - LOGGING_LEVEL=DEBUG
      - STATIC_URL=/static/
      - APP_ROOT_URL=
      - LINKING_LIB_REPO=https://github.com/NovaVic/ligo-lib
      - LINKING_APP_REPO=https://github.com/NovaVic/ligo
      - APP_VERSION:2.0.8
      - FILE_LOC:/user_data/media/datasets/
    depends_on:
      - postgres2
    #environment:
    #        IN_DOCKER: 1
    #user: django
    #use of this volume mount depends on how do we want to manage uploading/copying files
    #to be de-duplicated and linked
    #if we use it then we have to uncomment the "files" line in the bottom most volumes specific#in this file
    #need to check that it is not buggy
    volumes:
      - ./files/:/user_data
    command:
      /bin/bash start-dev.sh

volumes:
  files:
#  db_linking:
